/********** ICON FONTS **********/
@font-face {
  font-family: "gbes-icons";
  src: url("../../fonts/gbes-icons.eot");
  src: url("../../fonts/gbes-icons.eot?#iefix") format("embedded-opentype"), url("../../fonts/gbes-icons.woff") format("woff"), url("../../fonts/gbes-icons.ttf") format("truetype"), url("../../fonts/gbes-icons.svg#gbes-icons") format("svg");
  font-weight: normal;
  font-style: normal; }

[data-icon]:before {
  font-family: "gbes-icons" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

[class^="cssCollapse-icon-"]:before,
[class*=" cssCollapse-icon-"]:before {
  font-family: "gbes-icons" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.cssCollapse-icon-add:before {
  content: "'"; }

.cssCollapse-icon-add-fill:before {
  content: "%"; }

.cssCollapse-icon-minus:before {
  content: "("; }

.cssCollapse-icon-minus-fill:before {
  content: "&"; }

.cssCollapse-icon-arrow-down:before {
  content: ","; }

.cssCollapse-icon-arrow-down-fill:before {
  content: ")"; }

.cssCollapse-icon-arrow-up:before {
  content: "+"; }

.cssCollapse-icon-arrow-up-fill:before {
  content: "*"; }

.cssCollapse-icon-arrow2-up:before {
  content: "{"; }

.cssCollapse-icon-arrow2-down:before {
  content: "X"; }

.cssCollapse-icon-arrow2-right-fill:before {
  content: "\E001 "; }

.cssCollapse-icon-arrow2-right-1:before {
  content: "\E004 "; }

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center, dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, figure, figcaption,
footer, header, hgroup, menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

body {
  font-family: Arial, sans-serif;
  font-size: 15px; }

a, a:visited, a:focus {
  color: #00afd0;
  text-decoration: none;
  outline: 0; }

a:hover {
  color: #FFCC00;
  text-decoration: underline;
  outline: 0; }

.clearfix:after {
  content: " ";
  /* Older browser do not support empty content */
  visibility: hidden;
  display: block;
  height: 0;
  clear: both; }

body {
  font-family: Roboto, Arial, sans-serif;
  font-size: base-font-size;
  color: #222;
  line-height: 1.2; }

.container {
  display: block;
  margin: 20px auto;
  max-width: 1024px; }

.wrapper {
  margin: 0 16px; }

/********** CUSTOM CSS NEEDED ONLY FOR THE EXAMPLES **********/
.wrapBoxContent {
  margin: 40px 0; }
  .wrapBoxContent .button.inline {
    width: 40%; }

.boxHidden {
  background-color: #FFCC00; }

.innerText {
  line-height: 1.2;
  padding: 16px; }
  .linkTextHidden > .innerText {
    padding: 16px 0; }

.example1, .example2, .example3, .example4 {
  padding: 32px 0; }

.example2 .cssCollapse-target {
  display: table; }

.example2 .cssCollapse-collapseIcons {
  display: table-cell;
  vertical-align: middle; }

.example2 .cssCollapse-text {
  display: table-cell;
  padding-left: 6px;
  vertical-align: inherit; }

.heading1 {
  display: block;
  font-family: "Roboto", "Helvetica Neue", "Helvetica", sans-serif;
  font-size: 32px;
  font-weight: 300;
  color: #222;
  line-height: 1.3;
  margin: 16px 0; }

.intro, .introSmall {
  font-family: 'Roboto', 'Helvetica Neue', 'Helvetica', sans-serif; }

.intro {
  font-size: 22px;
  font-weight: 300;
  line-height: 1.4;
  margin: 20px 0;
  text-transform: uppercase; }

.intro, .introSmall {
  font-family: 'Roboto', 'Helvetica Neue', 'Helvetica', sans-serif; }

.intro {
  font-size: 22px;
  font-weight: 300;
  line-height: 1.4;
  margin: 20px 0;
  text-transform: uppercase; }

.introSmall {
  font-size: 18px;
  font-weight: 100;
  color: #00AAAE;
  line-height: 1.2;
  margin: 20px 0; }

/********** PREVENT PERMANENT HIGHLIGHT ON MOBILE **********/
.cssCollapse-target,
.cssCollapse-collapseIcons,
.accordion-target,
.accordion-icons {
  -webkit-tap-highlight-color: transparent; }

.button {
  -webkit-transition: ease 500ms background-color;
  -moz-transition: ease 500ms background-color;
  -ms-transition: ease 500ms background-color;
  -o-transition: ease 500ms background-color;
  transition: ease 500ms background-color;
  display: block;
  background-color: #FF6600;
  border: 1px solid #FF6600;
  border: 0;
  font-size: 1em;
  color: #FFF;
  cursor: pointer;
  outline: none;
  padding: 1em;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  -webkit-tap-highlight-color: transparent; }
  .button:hover {
    background-color: #ff6e0d; }
  .button:active {
    background-color: #f26100; }

.button[disabled], button:disabled {
  opacity: 0.30;
  filter: alpha(opacity=30); }

.button.inline {
  display: inline-block;
  padding: 16px 32px;
  width: 45%; }

.link {
  cursor: pointer;
  color: #FF6600; }
  .link:hover {
    text-decoration: none; }
  .link.alternative {
    color: #dddddd;
    text-decoration: none; }
  .link.alternative:hover {
    text-decoration: underline; }

.hidden {
  display: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
